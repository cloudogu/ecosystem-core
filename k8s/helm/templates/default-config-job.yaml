---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-default-config
  namespace: {{ .Release.Namespace }}
  annotations:
    # Helm hooks
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    # Argo CD hook
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded,BeforeHookCreation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-default-config
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded,BeforeHookCreation
rules:
  # Adjust as needed for your script (example allows namespaced reads)
  - apiGroups: [""]
    resources: ["configmaps","secrets"]
    verbs: ["get","list","watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-default-config
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded,BeforeHookCreation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}-default-config
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-default-config
    namespace: {{ .Release.Namespace }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-default-config
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-default-config
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    # Helm: run after install & upgrade
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "0"
    # Re-run on every install/upgrade: delete old job before creating new
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    # Argo CD: run after sync
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded,BeforeHookCreation
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 60
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-default-config
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ .Release.Name }}-default-config
      containers:
        - name: postrun
          image: "{{ .Values.defaultConfig.image.registry }}/{{ .Values.defaultConfig.image.repository }}:{{ .Values.defaultConfig.image.tag }}"
          imagePullPolicy: {{ .Values.defaultConfig.imagePullPolicy }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      imagePullSecrets:
        - name: ces-container-registries
